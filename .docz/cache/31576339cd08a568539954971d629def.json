{"remainingRequest":"/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/node_modules/source-map-loader/index.js!/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/src/components/StyledSvg.js","dependencies":[{"path":"/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/src/components/StyledSvg.js","mtime":1566146921581},{"path":"/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/node_modules/cache-loader/dist/cjs.js","mtime":1565808185138},{"path":"/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/node_modules/thread-loader/dist/cjs.js","mtime":1565808185087},{"path":"/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1565190612404},{"path":"/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/node_modules/source-map-loader/index.js","mtime":1565808185039}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvVXNlcnMvYW5vb3ByYXZlZW5kcmFuL0RvY3VtZW50cy9hbm9vcHJhdjdHaXRodWIvc3Rvcm1icmVha2VyLWljb25zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllcyI7CmltcG9ydCBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIGZyb20gIi9Vc2Vycy9hbm9vcHJhdmVlbmRyYW4vRG9jdW1lbnRzL2Fub29wcmF2N0dpdGh1Yi9zdG9ybWJyZWFrZXItaWNvbnMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCI7CnZhciBfanN4RmlsZU5hbWUgPSAiL1VzZXJzL2Fub29wcmF2ZWVuZHJhbi9Eb2N1bWVudHMvYW5vb3ByYXY3R2l0aHViL3N0b3JtYnJlYWtlci1pY29ucy9zcmMvY29tcG9uZW50cy9TdHlsZWRTdmcuanMiOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZW50ZXJNb2R1bGUgOiB1bmRlZmluZWQ7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG5cdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0ZmxleDogMCAwIGF1dG87XG5cdC8qIHdpZHRoOiAiLCAiOyAqL1xuXHQvKiBoZWlnaHQ6ICIsICI7ICovXG5cdCIsICJcbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuXHRmaWxsOiAiLCAiO1xuXHRzdHJva2U6ICIsICI7XG5cdGcge1xuXHRcdGZpbGw6IGluaGVyaXQ7XG5cdFx0c3Ryb2tlOiBpbmhlcml0O1xuXHR9XG5cdCo6bm90KFtzdHJva2VdKSB7XG5cdFx0JltmaWxsPSdub25lJ10ge1xuXHRcdFx0c3Ryb2tlLXdpZHRoOiAwO1xuXHRcdH1cblx0fVxuXHQqW3N0cm9rZSo9JyMnXSxcblx0KltTVFJPS0UqPScjJ10ge1xuXHRcdHN0cm9rZTogaW5oZXJpdDtcblx0XHRmaWxsOiBub25lO1xuXHR9XG5cdCpbZmlsbC1ydWxlXSxcblx0KltGSUxMLVJVTEVdLFxuXHQqW2ZpbGwqPScjJ10sXG5cdCpbRklMTCo9JyMnXSB7XG5cdFx0ZmlsbDogaW5oZXJpdDtcblx0XHRzdHJva2U6IG5vbmU7XG5cdH1cbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBzdHlsZWQsIHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnOwp2YXIgY29sb3JDc3MgPSBjc3MoX3RlbXBsYXRlT2JqZWN0KCksIGZ1bmN0aW9uIChwcm9wcykgewogIHJldHVybiBwcm9wcy5jb2xvciB8fCAnIzAwMDBmZic7Cn0sIGZ1bmN0aW9uIChwcm9wcykgewogIHJldHVybiBwcm9wcy5jb2xvciB8fCAnIzAwZmYwMCc7Cn0pOwoKdmFyIEljb25Jbm5lciA9IGZ1bmN0aW9uIEljb25Jbm5lcihfcmVmKSB7CiAgdmFyIGExMXlUaXRsZSA9IF9yZWYuYTExeVRpdGxlLAogICAgICBjb2xvciA9IF9yZWYuY29sb3IsCiAgICAgIHNpemUgPSBfcmVmLnNpemUsCiAgICAgIHRoZW1lID0gX3JlZi50aGVtZSwKICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbImExMXlUaXRsZSIsICJjb2xvciIsICJzaXplIiwgInRoZW1lIl0pOwoKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgic3ZnIiwgT2JqZWN0LmFzc2lnbih7CiAgICAiYXJpYS1sYWJlbCI6IGExMXlUaXRsZQogIH0sIHJlc3QsIHsKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDMwCiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSkpOwp9OwoKSWNvbklubmVyLmRpc3BsYXlOYW1lID0gJ0ljb24nOwp2YXIgU3R5bGVkU3ZnID0gc3R5bGVkKEljb25Jbm5lcikoX3RlbXBsYXRlT2JqZWN0MigpLCBmdW5jdGlvbiAocHJvcHMpIHsKICByZXR1cm4gcHJvcHMuc2l6ZSB8fCAnMjRweCc7Cn0sIGZ1bmN0aW9uIChwcm9wcykgewogIHJldHVybiBwcm9wcy5zaXplIHx8ICcyNHB4JzsKfSwgZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIGNvbG9yID0gX3JlZjIuY29sb3I7CiAgcmV0dXJuIGNvbG9yICE9PSAncGxhaW4nICYmIGNvbG9yQ3NzOwp9KTsKLyoKCWExMXlUaXRsZTogUHJvcFR5cGVzLnN0cmluZywKCWNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLAoJaHRtbENvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLAoJc2l6ZTogUHJvcFR5cGVzLm51bWJlcgoqLwoKdmFyIF9kZWZhdWx0ID0gU3R5bGVkU3ZnOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgU3R5bGVkU3ZnICE9PSAndW5kZWZpbmVkJyAmJiBTdHlsZWRTdmcgJiYgU3R5bGVkU3ZnID09PSBPYmplY3QoU3R5bGVkU3ZnKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKFN0eWxlZFN2ZykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU3R5bGVkU3ZnLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiU3R5bGVkU3ZnIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9TdHlsZWRTdmcuanMiCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQgOiB1bmRlZmluZWQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKGNvbG9yQ3NzLCAiY29sb3JDc3MiLCAiL1VzZXJzL2Fub29wcmF2ZWVuZHJhbi9Eb2N1bWVudHMvYW5vb3ByYXY3R2l0aHViL3N0b3JtYnJlYWtlci1pY29ucy9zcmMvY29tcG9uZW50cy9TdHlsZWRTdmcuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihJY29uSW5uZXIsICJJY29uSW5uZXIiLCAiL1VzZXJzL2Fub29wcmF2ZWVuZHJhbi9Eb2N1bWVudHMvYW5vb3ByYXY3R2l0aHViL3N0b3JtYnJlYWtlci1pY29ucy9zcmMvY29tcG9uZW50cy9TdHlsZWRTdmcuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihTdHlsZWRTdmcsICJTdHlsZWRTdmciLCAiL1VzZXJzL2Fub29wcmF2ZWVuZHJhbi9Eb2N1bWVudHMvYW5vb3ByYXY3R2l0aHViL3N0b3JtYnJlYWtlci1pY29ucy9zcmMvY29tcG9uZW50cy9TdHlsZWRTdmcuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL2Fub29wcmF2ZWVuZHJhbi9Eb2N1bWVudHMvYW5vb3ByYXY3R2l0aHViL3N0b3JtYnJlYWtlci1pY29ucy9zcmMvY29tcG9uZW50cy9TdHlsZWRTdmcuanMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/anoopraveendran/Documents/anooprav7Github/stormbreaker-icons/src/components/StyledSvg.js"],"names":["React","styled","css","colorCss","props","color","IconInner","a11yTitle","size","theme","rest","displayName","StyledSvg"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,IAAMC,QAAQ,GAAGD,GAAH,oBACL,UAAAE,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,IAAe,SAAnB;AAAA,CADA,EAEH,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAN,IAAe,SAAnB;AAAA,CAFF,CAAd;;AA0BA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcF,KAAd,QAAcA,KAAd;AAAA,MAAqBG,IAArB,QAAqBA,IAArB;AAAA,MAA2BC,KAA3B,QAA2BA,KAA3B;AAAA,MAAqCC,IAArC;;AAAA,SAAgD;AAAK,kBAAYH;AAAjB,KAAgCG,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhD;AAAA,CAAlB;;AACAJ,SAAS,CAACK,WAAV,GAAwB,MAAxB;AAEA,IAAMC,SAAS,GAAGX,MAAM,CAACK,SAAD,CAAT,qBAGF,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACI,IAAN,IAAc,MAAlB;AAAA,CAHH,EAID,UAAAJ,KAAK;AAAA,SAAIA,KAAK,CAACI,IAAN,IAAc,MAAlB;AAAA,CAJJ,EAKZ;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,KAAK,OAAV,IAAqBF,QAApC;AAAA,CALY,CAAf;AAQA;;;;;;;eAOeS,S;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA5CMT,Q;0BA0BAG,S;0BAGAM,S","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst colorCss = css`\n\tfill: ${props => props.color || '#0000ff'};\n\tstroke: ${props => props.color || '#00ff00'};\n\tg {\n\t\tfill: inherit;\n\t\tstroke: inherit;\n\t}\n\t*:not([stroke]) {\n\t\t&[fill='none'] {\n\t\t\tstroke-width: 0;\n\t\t}\n\t}\n\t*[stroke*='#'],\n\t*[STROKE*='#'] {\n\t\tstroke: inherit;\n\t\tfill: none;\n\t}\n\t*[fill-rule],\n\t*[FILL-RULE],\n\t*[fill*='#'],\n\t*[FILL*='#'] {\n\t\tfill: inherit;\n\t\tstroke: none;\n\t}\n`;\n\nconst IconInner = ({ a11yTitle, color, size, theme, ...rest }) => <svg aria-label={a11yTitle} {...rest} />;\nIconInner.displayName = 'Icon';\n\nconst StyledSvg = styled(IconInner)`\n\tdisplay: inline-block;\n\tflex: 0 0 auto;\n\t/* width: ${props => props.size || '24px'}; */\n\t/* height: ${props => props.size || '24px'}; */\n\t${({ color }) => color !== 'plain' && colorCss}\n`;\n\n/*\n\ta11yTitle: PropTypes.string,\n\tcolor: PropTypes.string,\n\thtmlColor: PropTypes.string,\n\tsize: PropTypes.number\n*/\n\nexport default StyledSvg;\n"]}]}